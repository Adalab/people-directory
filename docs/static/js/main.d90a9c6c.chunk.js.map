{"version":3,"sources":["services/people-service.js","components/Filters/index.js","components/Card/index.js","components/List/index.js","components/App/index.js","index.js"],"names":["fetchPeople","fetch","then","res","json","Filters","props","onGenderChange","genders","allCities","onCityChange","cities","react_default","a","createElement","type","name","id","value","onChange","checked","includes","htmlFor","map","item","react","key","Card","img","city","age","className","src","alt","List","people","login","picture","location","dob","uuid","components_Card","concat","first","last","thumbnail","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","isFetching","filters","handleGenderFilter","bind","assertThisInitialized","handleCityFilter","isGenderSelected","isCitySelected","getPeople","_this2","setState","prevState","results","objectSpread","filter","ind","arr","indexOf","user","length","gender","_this3","_this$state$filters","e","_e$target","target","find","_this$state$filters2","components_Filters","components_List","getFilteredPeople","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d90a9c6c.chunk.js","sourcesContent":["const URL = 'https://randomuser.me/api/?results=50';\n\nconst fetchPeople = () => {\n  return fetch(URL).then(res => res.json());\n};\n\nexport default fetchPeople;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n  const { onGenderChange, genders, allCities, onCityChange, cities } = props;\n  return (\n    <form>\n      <fieldset>\n        <legend>Gender</legend>\n        <input\n          type=\"checkbox\"\n          name=\"genders\"\n          id=\"female\"\n          value=\"female\"\n          onChange={onGenderChange}\n          checked={genders.includes('female')}\n        />\n        <label htmlFor=\"female\">Female</label>\n\n        <input\n          type=\"checkbox\"\n          name=\"genders\"\n          id=\"male\"\n          value=\"male\"\n          onChange={onGenderChange}\n          checked={genders.includes('male')}\n        />\n        <label htmlFor=\"male\">Male</label>\n      </fieldset>\n\n      <fieldset>\n        <legend>Cities</legend>\n        {allCities.map(item => {\n          return (\n            <Fragment key={item}>\n              <input\n                type=\"checkbox\"\n                name=\"cities\"\n                id={item}\n                value={item}\n                onChange={onCityChange}\n                checked={cities.includes(item)}\n              />\n              <label htmlFor={item}>{item}</label>\n            </Fragment>\n          );\n        })}\n      </fieldset>\n    </form>\n  );\n};\n\nFilters.propTypes = {\n  onGenderChange: PropTypes.func.isRequired,\n  genders: PropTypes.arrayOf(PropTypes.string).isRequired,\n  allCities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onCityChange: PropTypes.func.isRequired,\n  cities: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst Card = props => {\n  const { name, img, city, age } = props;\n  return (\n    <article className=\"Card\">\n      <h2>{name}</h2>\n      <img src={img} alt={name} />\n      <p>{city}</p>\n      <p>{age}</p>\n    </article>\n  );\n};\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '../Card';\n\nimport './styles.scss';\n\nconst List = props => {\n  return (\n    <ul className=\"List\">\n      {props.people.map(item => {\n        const { login, name, picture, location, dob } = item;\n        return (\n          <li key={login.uuid}>\n            <Card\n              name={`${name.first} ${name.last}`}\n              img={picture.thumbnail}\n              city={location.city}\n              age={dob.age}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nList.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default List;\n","import React, { Component } from 'react';\n\nimport fetchPeople from '../../services/people-service';\n\nimport Filters from '../Filters';\nimport List from '../List';\n\nimport './styles.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: {\n        data: [],\n        isFetching: true\n      },\n      filters: {\n        genders: [],\n        cities: [],\n        allCities: []\n      }\n    };\n    this.handleGenderFilter = this.handleGenderFilter.bind(this);\n    this.handleCityFilter = this.handleCityFilter.bind(this);\n    this.isGenderSelected = this.isGenderSelected.bind(this);\n    this.isCitySelected = this.isCitySelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPeople();\n  }\n\n  getPeople() {\n    fetchPeople().then(data => {\n      this.setState(prevState => {\n        return {\n          people: {\n            data: data.results,\n            isFetching: false\n          },\n          filters: {\n            ...prevState.filters,\n            allCities: data.results\n              .map(item => item.location.city)\n              .filter((item, ind, arr) => arr.indexOf(item) === ind)\n          }\n        };\n      });\n    });\n  }\n\n  isGenderSelected(user) {\n    const { genders } = this.state.filters;\n    return !genders.length || genders.includes(user.gender);\n  }\n\n  isCitySelected(user) {\n    const { cities } = this.state.filters;\n    return !cities.length || cities.includes(user.location.city);\n  }\n\n  getFilteredPeople() {\n    const { data } = this.state.people;\n\n    return data.filter(user => {\n      return this.isGenderSelected(user) && this.isCitySelected(user);\n    });\n  }\n\n  getFilteredPeopleSimpleVersion() {\n    const { data } = this.state.people;\n    const { genders, cities } = this.state.filters;\n\n    return data\n      .filter(user => {\n        if (!genders.length) {\n          return true;\n        } else {\n          return genders.includes(user.gender);\n        }\n      })\n      .filter(user => {\n        if (!cities.length) {\n          return true;\n        } else {\n          return cities.includes(user.location.city);\n        }\n      });\n  }\n\n  handleGenderFilter(e) {\n    const { value, checked } = e.target;\n\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          genders: checked\n            ? prevState.filters.genders.concat(value)\n            : prevState.filters.genders.filter(item => item !== value)\n        }\n      };\n    });\n  }\n\n  handleCityFilter(e) {\n    const { value } = e.target;\n\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          cities: prevState.filters.cities.find(item => item === value)\n            ? prevState.filters.cities.filter(item => item !== value)\n            : prevState.filters.cities.concat(value)\n        }\n      };\n    });\n  }\n\n  render() {\n    const { isFetching } = this.state.people;\n    const { genders, allCities, cities } = this.state.filters;\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 className=\"App__title\">People Directory</h1>\n        </header>\n        {isFetching ? (\n          <p>Loading...</p>\n        ) : (\n          <main className=\"App__main\">\n            <aside className=\"App__left-column\">\n              <Filters\n                onGenderChange={this.handleGenderFilter}\n                genders={genders}\n                allCities={allCities}\n                onCityChange={this.handleCityFilter}\n                cities={cities}\n              />\n            </aside>\n            <List people={this.getFilteredPeople()} />\n          </main>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}